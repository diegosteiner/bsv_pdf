{"version":3,"sources":["components/Advisor/AdvisorStatementPdf.module.css","components/Canton/CantonStatementPdf.module.css","components/Layout.module.css","components/styles.module.css","components/DSVImport.tsx","models/course_number.ts","components/CourseTable.tsx","models/advisor.ts","components/AdvisorTable.tsx","components/Layout.tsx","components/CantonTable.tsx","models/attendance.ts","models/import_data.ts","store.ts","views/MainView.tsx","images/signature.png","components/Footer.tsx","components/Advisor/AdvisorStatementPdf.tsx","views/AdivsorStatementPdfView.tsx","models/canton_statement.ts","components/Canton/CantonStatementPdf.tsx","views/CantonStatementPdfView .tsx","models/canton.ts","App.tsx","i18n.ts","index.tsx"],"names":["module","exports","DSVImport","onChange","reader","FileReader","onload","event","parse","target","result","complete","data","type","file","files","readAsText","NoCourseNumberError","Error","parseCourseNumber","courseNumberString","match","RegExp","exec","cantonalAssociation","toUpperCase","kind","regionalAssociation","countNumber","year","getAssociation","courseNumber","formatCourseNumber","CourseTable","courses","map","course","advisorName","advisor","firstName","lastName","scoutName","AdvisorTable","advisors","to","id","Math","random","Container","children","className","styles","container","CantonTable","cantons","canton","totalAttendance","attendance","days","count","getAttendancesFromSummary","participationsString","split","participationString","values","parseFloat","transform","Set","reduce","tupel","advisorId","newAdvisor","address","zipcode","town","country","email","salutation","extractAdvisor","agreementIdFiver","courseIdFiver","firstCourseDate","lastCourseDate","location","trainingDays","bsvDays","bsvEligibleParticipationsCount","bsvEligibleAttendances","bsvEligibleAttendance","leaderCount","allParticipantsCount","allParticipantsAttendanceSummary","allParticipantsAttendances","allParticipantsAttendance","cantonsCount","parseInt","languagesCount","e","extractCourse","push","add","Array","from","defaultState","amountPerParticipant","Date","getFullYear","useStore","create","persist","set","importData","value","state","setYear","setAmountPerParticipant","name","getStorage","sessionStorage","MainView","step","Object","Footer","lng","t","useTranslation","i18n","getFixedT","signature","src","alt","AdvisorStatementPdf","document","title","table","right","toFixed","length","AdvisorStatementPdfView","useParams","onClick","window","print","filter","totalAttendanceCount","cantonStatement","sum","totalAmount","cantontStatement","CantonStatementPdf","statement","date","toLocaleDateString","center","attendances","attendance1","shift","attendance2","separator","CantonStatementPdfView","includes","App","basename","process","path","use","initReactI18next","init","resources","de","translation","fr","interpolation","escapeValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,SAAW,sCAAsC,MAAQ,mCAAmC,UAAY,uCAAuC,MAAQ,mCAAmC,MAAQ,qC,kBCApND,EAAOC,QAAU,CAAC,SAAW,qCAAqC,MAAQ,kCAAkC,UAAY,sCAAsC,MAAQ,kCAAkC,MAAQ,kCAAkC,OAAS,mCAAmC,UAAY,wC,mBCA1SD,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,MAAQ,wB,8HCOjFC,EAA+C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEvDC,EAAS,IAAIC,WAWnB,OANAD,EAAOE,OAAS,SAACC,GAAW,IAAD,EACzBC,gBAAK,UAACD,EAAME,cAAP,aAAC,EAAcC,OAAkB,CACpCC,SAAU,gBAAGC,EAAH,EAAGA,KAAH,OAAuCT,EAASS,OAIvD,uBAAOC,KAAK,OAAOV,SAVL,SAACI,GAAgD,IAAD,EAC7DO,GAAO,UAAAP,EAAME,cAAN,eAAcM,QAASR,EAAME,OAAOM,MAAM,GACvDD,GAAQV,EAAOY,WAAWF,EAAM,gB,wCCbvBG,EAAb,wIAAyCC,QAWlC,SAASC,EAAkBC,GAA2C,IAAD,EAEpEC,EADQ,IAAIC,OAAJ,YAAW,uQAAX,qDAAmH,KAC7GC,KAAKH,GACzB,IAAKC,EAAO,MAAM,IAAIJ,EAAoB,uBAE1C,MAAO,CACLO,oBAAmB,UAAEH,EAAM,UAAR,aAAE,EAAUI,cAC/BC,MAAOL,EAAM,GACbM,oBAAqBN,EAAM,GAC3BO,aAAcP,EAAM,GACpBQ,MAAOR,EAAM,IAIV,SAASS,EAAeC,GAC7B,OAAKA,EAAaP,qBAA4D,KAArCO,EAAaP,oBACb,OAArCO,EAAaP,oBAAoC,MAAN,OAAaO,EAAaJ,qBAClEI,EAAaP,qBAAuB,GAF8C,KAKpF,SAASQ,EAAmBD,GACjC,IAAMP,EAAsBO,EAAaP,oBAAb,UAAsCO,EAAaP,oBAAnD,KAA4E,GACxG,MAAM,UAAN,OAAiBA,GAAjB,OAAuCO,EAAaL,MAApD,OAA2DK,EAAaJ,qBAAxE,OAA8FI,EAAaH,YAA3G,YAA0HG,EAAaF,MCzBlI,SAASI,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,QAC5B,OACE,kCACE,0BACA,gCACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,+BACE,6BAAKJ,EAAmBI,EAAOL,gBAC/B,6BAAKK,EAAOL,aAAaP,sBACzB,6BAAKY,EAAOV,OACZ,yBAJOM,EAAmBI,EAAOL,uBCCtC,SAASM,EAAYC,GAC1B,MAAM,GAAN,OAAUA,EAAQC,UAAlB,YAA+BD,EAAQE,SAAvC,cAAqDF,EAAQG,WCRxD,SAASC,EAAT,GAA0D,IAAlCC,EAAiC,EAAjCA,SAC7B,OACE,kCACE,0BACA,gCACGA,EAASR,KAAI,SAAAG,GAAO,OACnB,+BACE,6BAAKD,EAAYC,KACjB,6BAAI,cAAC,IAAD,CAAMM,GAAE,oBAAeN,EAAQO,IAA/B,qBAFGP,EAAQO,IAAsB,IAAhBC,KAAKC,kB,qBCXzBC,EAAmC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjD,OAAQ,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KCGhCI,EAAmD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjE,OACE,kCACE,0BACA,gCACGA,EAAQnB,KAAI,SAAAoB,GAAM,OACjB,+BACE,6BAAKA,IACL,6BAAI,cAAC,IAAD,CAAMX,GAAE,mBAAcW,GAAtB,qBAFGA,Y,uBCPZ,SAASC,EAAgBC,GAC9B,OAAOA,EAAWC,KAAOD,EAAWE,MAG/B,SAASC,EAA0BC,GACxC,OAAOA,EAAqBC,MAAM,KAAK3B,KAAI,SAAA4B,GACzC,IAAMC,EAASD,EAAoBD,MAAM,KACzC,MAAO,CACLH,MAAOM,WAAWD,EAAO,IAAKN,KAAMO,WAAWD,EAAO,QCmDrD,SAASE,EAAUtD,GACxB,IAAM+B,EAAuB,GACvBW,EAAuB,IAAIa,IAmBjC,MAAO,CAAEjC,QAlBiBtB,EAAKwD,QAAO,SAAC1D,EAAkB2D,GACvD,IAAMC,EAAYD,EAAM,IACxB,IAAK1B,EAAS2B,GAAY,CACxB,IAAMC,EAtBL,SAAwBF,GAC7B,OAAKA,EAAM,IACJ,CACLxB,GAAIwB,EAAM,IACV9B,UAAW8B,EAAM,IACjB7B,SAAU6B,EAAM,IAChB5B,UAAW4B,EAAM,IACjBG,QAASH,EAAM,IACfI,QAASJ,EAAM,IACfK,KAAML,EAAM,IACZM,QAASN,EAAM,IACfO,MAAOP,EAAM,IACbQ,WAAYR,EAAM,KAXG,KAqBAS,CAAeT,GAClCE,IAAe5B,EAAS2B,GAAaC,GAEvC,IAAMjC,EAAUK,EAAS2B,GACnBlC,EA3DH,SAAuBiC,GAC5B,IACE,MAAO,CACLU,iBAAkBV,EAAM,GACxBW,cAAeX,EAAM,GACrB3C,KAAM2C,EAAM,GACZtC,aAAcZ,EAAkBkD,EAAM,IACtCY,gBAAiBZ,EAAM,GACvBa,eAAgBb,EAAM,GACtBc,SAAUd,EAAM,GAChBe,aAAcnB,WAAWI,EAAM,IAC/BgB,QAASpB,WAAWI,EAAM,KAC1BiB,+BAAgCrB,WAAWI,EAAM,KACjDkB,uBAAwBtB,WAAWI,EAAM,KACzCmB,sBAAuB5B,EAA0BS,EAAM,KACvDoB,YAAapB,EAAM,IACnBqB,qBAAsBzB,WAAWI,EAAM,KACvCsB,iCAAkCtB,EAAM,IACxCuB,2BAA4B3B,WAAWI,EAAM,KAC7CwB,0BAA2BjC,EAA0BS,EAAM,KAC3DyB,aAAcC,SAAS1B,EAAM,KAC7B2B,eAAgBD,SAAS1B,EAAM,MAEjC,MAAO4B,GACP,GAAIA,aAAahF,EACf,OAAO,KAGP,MAAMgF,GA+BOC,CAAc7B,GAE7B,GAAIjC,EAAQ,CACV1B,EAAOyF,KAAP,aAAc7D,WAAYF,IAC1B,IAAMmB,EAASzB,EAAeM,EAAOL,cACrCwB,GAAUD,EAAQ8C,IAAI7C,GAGxB,OAAO7C,IACN,IAEeiC,WAAUW,QAAS+C,MAAMC,KAAKhD,ICrE3C,IAAMiD,EAAe,CAAEjD,QAAS,GAAIpB,QAAS,GAAIS,SAAU,GAAI6D,qBAAsB,GAAM3E,MAAO,IAAI4E,MAAQC,eAExGC,EAAWC,YAAiBC,mBACvC,SAACC,GAAD,mBAAC,eACIP,GADL,IAEEQ,WAAY,SAACC,GAAD,OAA0BF,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAU/C,EAAU8C,QAC/EE,QAAS,SAACF,GAAD,OAAmBF,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBpF,KAAMmF,QAC9DG,wBAAyB,SAACH,GAAD,OAAmBF,GAAI,SAACG,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBT,qBAAsBQ,YAEhG,CACEI,KAAM,kBACNC,WAAY,kBAAMC,mBCaPC,MAjCR,WACL,MAAiHZ,IAAzGzE,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,SAAU6D,EAA3B,EAA2BA,qBAAsB3E,EAAjD,EAAiDA,KAAMyB,EAAvD,EAAuDA,QAASyD,EAAhE,EAAgEA,WAAYI,EAA5E,EAA4EA,wBAAyBD,EAArG,EAAqGA,QAErG,OACE,cAAC,EAAD,UACE,gCACE,yCACA,sBAAKhE,UAAU,gBAAf,UACE,kCACE,wCACA,cAAC,EAAD,CAAW/C,SAAU,SAAC6G,GAAD,OAAWD,EAAWC,SAG7C,kCACE,gDACA,uBAAOnG,KAAK,SAAS2G,KAAK,MAAMR,MAAOR,EAAsBrG,SAAU,SAACI,GAAD,OAAW4G,EAAwBlD,WAAW1D,EAAME,OAAOuG,cAEpI,kCACE,uCACA,uBAAOnG,KAAK,SAAS2G,KAAK,IAAIR,MAAOnF,EAAM1B,SAAU,SAACI,GAAD,OAAW2G,EAAQnB,SAASxF,EAAME,OAAOuG,iBAGlG,uCACA,cAAC/E,EAAD,CAAaC,QAASA,IACtB,yCACA,cAAC,EAAD,CAAaoB,QAASA,IACtB,qCACA,cAACZ,EAAD,CAAcC,SAAU8E,OAAOzD,OAAOrB,W,iBCnC/B,MAA0B,sC,yBCKlC,SAAS+E,EAAT,GAA2C,IAAzBC,EAAwB,EAAxBA,IACjBC,EAAIC,cAAiBC,KAAKC,UAAUJ,GAE1C,OACE,qCACE,4BAAIC,EAAE,qBACN,qBAAK1E,UAAWC,IAAO6E,UAAWC,IAAKD,EAAWE,IAAI,cACtD,4BAAIN,EAAE,uBCDL,SAASO,EAAT,GAA+G,IAAhF7F,EAA+E,EAA/EA,QAASJ,EAAsE,EAAtEA,QAASL,EAA6D,EAA7DA,KAAM2E,EAAuD,EAAvDA,qBAAsBmB,EAAiC,EAAjCA,IAC5EC,EAAIC,cAAiBC,KAAKC,UAAUJ,GAE1C,OACE,sBAAKzE,UAAWC,IAAOiF,SAAvB,UACE,wCACM9F,EAAQC,UADd,YAC2BD,EAAQE,UACjC,uBAFF,UAGMF,EAAQkC,SACZ,uBAJF,UAKMlC,EAAQmC,QALd,YAKyBnC,EAAQoC,KALjC,YAKyCpC,EAAQqC,SAC/C,0BAEF,oBAAIzB,UAAWC,IAAOkF,MAAtB,SAA8BT,EAAE,4BAA6B,CAAE/F,WAC/D,4BAAIS,EAAQuC,aACZ,4BAAI+C,EAAE,8BAEN,wBAAO1E,UAAWC,IAAOmF,MAAzB,UACE,gCACE,+BACE,6BAAKV,EAAE,wCACP,6BAAKA,EAAE,mCACP,6BAAKA,EAAE,oCACP,oBAAI1E,UAAWC,IAAOoF,MAAtB,SAA8BX,EAAE,8CAGpC,gCACG1F,EAAQC,KAAI,SAACC,GACZ,OACE,+BACE,6BAAKJ,EAAmBI,EAAOL,gBAC/B,6BAAKK,EAAOV,OACZ,6BAAKU,EAAOV,OACZ,oBAAIwB,UAAWC,IAAOoF,MAAtB,SACG/B,EAAqBgC,QAAQ,aAMxC,gCACE,+BACE,uBACA,uBACA,6BAAKZ,EAAE,+BACP,oBAAI1E,UAAWC,IAAOoF,MAAtB,UACIrG,EAAQuG,OAASjC,GAAsBgC,QAAQ,aAKzD,4BAAIZ,EAAE,+BAEN,cAACF,EAAD,CAAQC,IAAKA,OCtDZ,SAASe,IACd,IAAQ7F,EAAO8F,cAAP9F,GACR,EAA0D8D,IAAlDzE,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,SAAU6D,EAA3B,EAA2BA,qBAAsB3E,EAAjD,EAAiDA,KAC3CS,EAAUK,EAASE,GAEzB,OACE,qCACE,sBAAKK,UAAU,WAAf,UACE,cAAC,IAAD,CAAMN,GAAG,IAAT,kBACA,wBAAQgG,QAAS,kBAAMC,OAAOC,SAA9B,sBAGDxG,GAAW,cAAC6F,EAAD,CAAqBR,IAAI,KAAKrF,QAASA,EAASJ,QAASA,EAAQ6G,QAAO,SAAA3G,GAAM,aAAI,UAAAA,EAAOE,eAAP,eAAgBO,MAAOP,EAAQO,MAAKhB,KAAMA,EAAM2E,qBAAsBA,O,oBCZnK,SAASwC,EAAqBC,GACnC,OAAOA,EAAgB/G,QAAQkC,QAAO,SAAC8E,EAAK9G,GAAN,OAAiB8G,EAAM9G,EAAOmD,yBAAwB,GAGvF,SAAS4D,EAAYC,GAC1B,OAAOJ,EAAqBI,GAAoBA,EAAiB5C,qBCF5D,SAAS6C,EAAT,GAEsB,IAD3BC,EAC0B,EAD1BA,UAAW3B,EACe,EADfA,IAEHzF,EAAgDoH,EAAhDpH,QAASL,EAAuCyH,EAAvCzH,KAAM0B,EAAiC+F,EAAjC/F,OAAQiD,EAAyB8C,EAAzB9C,qBACzBoB,EAAIC,cAAiBC,KAAKC,UAAUJ,GAE1C,OACE,sBAAKzE,UAAWC,IAAOiF,SAAvB,UACE,4BAAIR,EAAE,wCAAyC,CAAE2B,MAAM,IAAI9C,MAAO+C,mBAAmB,aACrF,oBAAItG,UAAWC,IAAOkF,MAAtB,SAA8BT,EAAE,2BAA4B,CAAE/F,OAAM0B,aACpE,4BAAIqE,EAAE,0BAA2B,CAAEpB,2BACnC,wBAAOtD,UAAWC,IAAOmF,MAAzB,UACE,gCACE,+BACE,+BACGV,EAAE,iCACH,uBACCA,EAAE,yCAEL,+BACGA,EAAE,oCACH,uBACCA,EAAE,wCAEL,oBAAI1E,UAAWC,IAAOsG,OAAtB,SAA+B7B,EAAE,8BACjC,oBAAI1E,UAAWC,IAAOsG,OAAtB,SAA+B7B,EAAE,6BACjC,oBAAI1E,UAAWC,IAAOsG,OAAtB,SAA+B7B,EAAE,gCACjC,qBAAI1E,UAAWC,IAAOsG,OAAtB,UACG7B,EAAE,gCACH,uBACCA,EAAE,4BAEL,qBAAI1E,UAAWC,IAAOoF,MAAtB,UACGX,EAAE,iCACH,uBACCA,EAAE,gCAEL,qBAAI1E,UAAWC,IAAOoF,MAAtB,UACGX,EAAE,+BACH,uBACCA,EAAE,sCAIT,gCACG1F,EAAQC,KAAI,SAACC,GACZ,IAAMsH,EAAcrD,MAAMC,KAAKlE,EAAOoD,uBAChCmE,EAAcD,EAAYE,QAC1BC,EAAcH,EAAYE,QAChC,OACE,qCACE,+BACE,6BACE,iCAAS5H,EAAmBI,EAAOL,kBAErC,6BAAKK,EAAO6C,kBACZ,oBAAI/B,UAAWC,IAAOsG,OAAtB,gBAA+BE,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAahG,QAC5C,oBAAIT,UAAWC,IAAOsG,OAAtB,gBAA+BE,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAajG,OAC5C,oBAAIR,UAAWC,IAAOsG,OAAtB,SAA+BE,EAAcnG,EAAgBmG,GAAe,KAC5E,sCACA,sCACA,yCAEF,+BACE,6BAAKvH,EAAOV,OACZ,6BAAKU,EAAO8C,iBACZ,oBAAIhC,UAAWC,IAAOsG,OAAtB,gBAA+BI,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAalG,QAC5C,oBAAIT,UAAWC,IAAOsG,OAAtB,gBAA+BI,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAanG,OAC5C,oBAAIR,UAAWC,IAAOsG,OAAtB,SAA+BI,EAAcrG,EAAgBqG,GAAe,KAC5E,sCACA,sCACA,yCAEDH,EAAYvH,KAAI,SAACsB,GAAD,OACf,+BACE,sCACA,sCACA,oBAAIP,UAAWC,IAAOsG,OAAtB,SAA+BhG,EAAWE,QAC1C,oBAAIT,UAAWC,IAAOsG,OAAtB,SAA+BhG,EAAWC,OAC1C,oBAAIR,UAAWC,IAAOsG,OAAtB,SAA+BhG,EAAaD,EAAgBC,GAAc,KAC1E,sCACA,sCACA,4CAGJ,+BACE,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,sCACA,yCAEF,qBAAIP,UAAWC,IAAO2G,UAAtB,UACE,sCACA,sCACA,sCACA,sCACA,sCACA,oBAAI5G,UAAWC,IAAOsG,OAAtB,SACGrH,EAAOmD,yBAEV,oBAAIrC,UAAWC,IAAOoF,MAAtB,UAEInG,EAAOmD,uBAAyBiB,GAChCgC,QAAQ,KAEZ,oBAAItF,UAAWC,IAAOoF,MAAtB,UAEInG,EAAOmD,uBAAyBiB,GAChCgC,QAAQ,gBAOtB,gCACE,+BACE,uBACA,uBACA,uBACA,uBACA,oBAAItF,UAAWC,IAAOsG,OAAtB,SAA+B7B,EAAE,8BACjC,oBAAI1E,UAAWC,IAAOsG,OAAtB,SAA+BT,EAAqBM,KACpD,oBAAIpG,UAAWC,IAAOoF,MAAtB,SACGY,EAAYG,GAAWd,QAAQ,KAElC,oBAAItF,UAAWC,IAAOoF,MAAtB,SACGY,EAAYG,GAAWd,QAAQ,aAKxC,cAACd,EAAD,CAAQC,IAAKA,OCvIZ,SAASoC,IACd,IAAQlH,EAAO8F,cAAP9F,GACR,EAAgD8D,IAAxCzE,EAAR,EAAQA,QAASsE,EAAjB,EAAiBA,qBAAsB3E,EAAvC,EAAuCA,KAC/B+F,EAAMC,cAAND,EACFD,ECjBC,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMqC,SDiBtBnH,ECjBsCpB,eAAiB,KAAO,KDkB9EwH,EAAmC,CACvC/G,QAASA,EAAQ6G,QAAO,SAAA3G,GAAM,OAAIN,EAAeM,EAAOL,cAAcN,gBAAkBoB,EAAGpB,iBAC3FI,KAAMA,EACN2E,qBAAsBA,EACtBjD,OAAQV,GAGV,OACE,qCACE,sBAAKK,UAAU,WAAf,UACE,cAAC,IAAD,CAAMN,GAAG,IAAT,SAAcgF,EAAE,UAChB,wBAAQgB,QAAS,kBAAMC,OAAOC,SAA9B,sBAGDG,GAAmB,cAACI,EAAD,CAAoB1B,IAAKA,EAAK2B,UAAWL,O,MEdpDgB,MAZR,WACL,OACE,cAAC,IAAD,CAAQC,SAAUC,WAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,gBAAgBnH,SAAU,cAACyF,EAAD,MACtC,cAAC,IAAD,CAAO0B,KAAK,eAAenH,SAAU,cAAC8G,EAAD,MACrC,cAAC,IAAD,CAAO9G,SAAU,cAAC,EAAD,Y,iBC6FzB6E,IACGuC,IAAIC,MACJC,KAAK,CACJC,UA1Gc,CAChBC,GAAI,CACFC,YAAa,CACX,KAAQ,YACR,oBAAuB,CACrB,MAAS,gCACT,KAAO,8HACP,eAAkB,mBAClB,UAAa,mBACb,WAAc,cACd,eAAkB,mBAClB,MAAS,QACT,MAAQ,yNAEV,mBAAsB,CACpB,mBAAsB,iBACtB,MAAS,8DACT,KAAO,+ZAKP,WAAc,aACd,gBAAmB,kBACnB,cAAiB,iBACjB,eAAkB,kBAClB,MAAS,SACT,KAAQ,OACR,QAAW,YACX,UAAa,aACb,GAAM,KACN,WAAc,cACd,OAAU,YACV,SAAY,YACZ,QAAW,UACX,MAAS,SAGX,OAAU,CACR,SAAW,mIAGX,QAAU,6KAQhBC,GAAI,CACFD,YAAa,CACX,KAAQ,SACR,oBAAuB,CACrB,MAAS,gCACT,KAAO,8HACP,eAAkB,mBAClB,UAAa,mBACb,WAAc,cACd,eAAkB,mBAClB,MAAS,QACT,MAAQ,yNAEV,mBAAsB,CACpB,mBAAsB,kBACtB,MAAS,mEACT,KAAO,4gBAQP,WAAc,cACd,gBAAmB,gBACnB,cAAiB,eACjB,eAAkB,eAClB,MAAS,QACT,KAAQ,QACR,QAAW,gBACX,UAAa,cACb,GAAM,QACN,WAAc,eACd,OAAU,aACV,SAAY,YACZ,QAAW,WACX,MAAS,SAGX,OAAU,CACR,SAAW,0IAGX,QAAU,2LAad/C,IAAK,KAILiD,cAAe,CACbC,aAAa,KAIJ/C,EAAf,EClHAgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5C,SAAS6C,eAAe,W","file":"static/js/main.7f708ae6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"AdvisorStatementPdf_document__3aSbO\",\"title\":\"AdvisorStatementPdf_title__1VpJQ\",\"signature\":\"AdvisorStatementPdf_signature__g1MHp\",\"table\":\"AdvisorStatementPdf_table__3Mk2g\",\"right\":\"AdvisorStatementPdf_right__sgSDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"CantonStatementPdf_document__EBEqE\",\"title\":\"CantonStatementPdf_title__1qpxm\",\"signature\":\"CantonStatementPdf_signature__1KFn9\",\"table\":\"CantonStatementPdf_table__39rps\",\"right\":\"CantonStatementPdf_right__1leZF\",\"center\":\"CantonStatementPdf_center__E5PyN\",\"separator\":\"CantonStatementPdf_separator__ZcRe9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3pAzR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signature\":\"styles_signature__1xQ9c\",\"table\":\"styles_table__CYW_7\",\"right\":\"styles_right__1CLLX\"};","import React, { FunctionComponent } from 'react';\nimport { ImportTupel } from '../models/import_data'\nimport { parse } from 'papaparse';\n\nexport interface DSVImportProps {\n  onChange: (value: ImportTupel[]) => void;\n}\n\nexport const DSVImport: FunctionComponent<DSVImportProps> = ({ onChange }) => {\n\n  const reader = new FileReader()\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target?.files && event.target.files[0]\n    file && reader.readAsText(file, 'iso88591');\n  };\n  reader.onload = (event) => {\n    parse(event.target?.result as string, {\n      complete: ({ data }: { data: ImportTupel[] }) => onChange(data)\n    });\n  }\n\n  return <input type=\"file\" onChange={handleChange} />;\n};\n\n","export class NoCourseNumberError extends Error {\n}\n\nexport type CourseNumber = {\n  cantonalAssociation?: string;\n  regionalAssociation: string;\n  year: number\n  kind: number\n  countNumber: number\n}\n\nexport function parseCourseNumber(courseNumberString: string): CourseNumber {\n  const regex = new RegExp(/PBS\\s?(CH)?\\s([a-zA-Z]{2})?\\s?(?<kind>\\d)(?<regionalAssociation>\\d)(?<countNumber>\\d)-(?<year>\\d{2})/, 'i')\n  const match = regex.exec(courseNumberString)\n  if (!match) throw new NoCourseNumberError('Not a course number')\n\n  return {\n    cantonalAssociation: match[2]?.toUpperCase(),\n    kind: +match[3],\n    regionalAssociation: match[4],\n    countNumber: +match[5],\n    year: +match[6],\n  }\n}\n\nexport function getAssociation(courseNumber: CourseNumber): string {\n  if (!courseNumber.cantonalAssociation || courseNumber.cantonalAssociation === '') return 'CH';\n  if (courseNumber.cantonalAssociation === 'ZH') return `ZH-${courseNumber.regionalAssociation}`;\n  return courseNumber.cantonalAssociation || '';\n}\n\nexport function formatCourseNumber(courseNumber: CourseNumber): string {\n  const cantonalAssociation = courseNumber.cantonalAssociation ? `${courseNumber.cantonalAssociation} ` : ''\n  return `PBS CH ${cantonalAssociation}${courseNumber.kind}${courseNumber.regionalAssociation}${courseNumber.countNumber}-${courseNumber.year}`\n}\n","import React from 'react'\nimport { Course } from '../models/course'\nimport { formatCourseNumber } from \"../models/course_number\"\n\ntype CourseTableProps = {\n  courses: Course[];\n}\n\nexport function CourseTable({ courses }: CourseTableProps) {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {courses.map(course => (\n          <tr key={formatCourseNumber(course.courseNumber)}>\n            <td>{formatCourseNumber(course.courseNumber)}</td>\n            <td>{course.courseNumber.cantonalAssociation}</td>\n            <td>{course.kind}</td>\n            <td>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { Course } from \"./course\"\n\nexport type Advisor = {\n  id: string;\n  firstName: string;\n  lastName: string;\n  scoutName: string;\n  address: string;\n  zipcode: string;\n  town: string;\n  country: string;\n  email: string;\n  salutation: string;\n}\n\nexport function advisorName(advisor: Advisor) {\n  return `${advisor.firstName} ${advisor.lastName} / ${advisor.scoutName}`\n}\n\nexport type AdvisorStatement = {\n  advisor: Advisor;\n  courses: Course[];\n  year: number;\n  amountPerParticipant: number;\n}\n\nexport type AdvisorMap = { [key: string]: Advisor }\n","import React, { ReactElement } from 'react'\nimport { Advisor, advisorName } from '../models/advisor'\nimport { Link } from 'react-router-dom'\n\ntype Props = {\n  advisors: Advisor[];\n}\n\nexport function AdvisorTable({ advisors }: Props): ReactElement {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {advisors.map(advisor => (\n          <tr key={advisor.id || Math.random() * 10000000}>\n            <td>{advisorName(advisor)}</td>\n            <td><Link to={`/advisors/${advisor.id}`}>PDF</Link></td>\n          </tr>\n        ))}\n      </tbody>\n    </table >\n  )\n}\n","import styles from './Layout.module.css'\nimport React, { FunctionComponent } from 'react'\n\nexport const Container: FunctionComponent<{}> = ({ children }) => {\n  return (<div className={styles.container}>{children}</div>)\n}\n","import React, { FunctionComponent } from 'react'\nimport { Link } from 'react-router-dom'\n\ntype CourseTableProps = {\n  cantons: string[];\n}\n\nexport const CantonTable: FunctionComponent<CourseTableProps> = ({ cantons }) => {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {cantons.map(canton => (\n          <tr key={canton}>\n            <td>{canton}</td>\n            <td><Link to={`/cantons/${canton}`}>PDF</Link></td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","\nexport type Attendance = {\n  days: number\n  count: number\n}\n\nexport function totalAttendance(attendance: Attendance) {\n  return attendance.days * attendance.count\n}\n\nexport function getAttendancesFromSummary(participationsString: string): Attendance[] {\n  return participationsString.split(',').map(participationString => {\n    const values = participationString.split('x')\n    return {\n      count: parseFloat(values[0]), days: parseFloat(values[1])\n    }\n  })\n}\n\n","import { AppState } from \"../store\";\nimport { Advisor, AdvisorMap } from \"./advisor\";\nimport { getAttendancesFromSummary } from \"./attendance\";\nimport { Course } from \"./course\"\nimport { parseCourseNumber, getAssociation, NoCourseNumberError } from \"./course_number\";\n\nexport function getAdvisorId(tupel: ImportTupel): string {\n  return tupel[20]\n}\n\nexport type ImportTupel = [\n  string, string, string, string, string, string, string, string, string, string,\n  string, string, string, string, string, string, string, string, string, string,\n  string, string, string, string, string, string, string, string, string, string\n]\n\nexport function extractCourse(tupel: ImportTupel): Course | null {\n  try {\n    return {\n      agreementIdFiver: tupel[0],\n      courseIdFiver: tupel[1],\n      kind: tupel[2],\n      courseNumber: parseCourseNumber(tupel[5]),\n      firstCourseDate: tupel[6],\n      lastCourseDate: tupel[7],\n      location: tupel[8],\n      trainingDays: parseFloat(tupel[9]),\n      bsvDays: parseFloat(tupel[10]),\n      bsvEligibleParticipationsCount: parseFloat(tupel[11]),\n      bsvEligibleAttendances: parseFloat(tupel[13]),\n      bsvEligibleAttendance: getAttendancesFromSummary(tupel[12]),\n      leaderCount: tupel[14],\n      allParticipantsCount: parseFloat(tupel[15]),\n      allParticipantsAttendanceSummary: tupel[16],\n      allParticipantsAttendances: parseFloat(tupel[17]),\n      allParticipantsAttendance: getAttendancesFromSummary(tupel[16]),\n      cantonsCount: parseInt(tupel[18]),\n      languagesCount: parseInt(tupel[19])\n    }\n  } catch (e) {\n    if (e instanceof NoCourseNumberError) {\n      return null;\n    }\n    else {\n      throw e;\n    }\n  }\n}\n\nexport function extractAdvisor(tupel: ImportTupel): Advisor | null {\n  if (!tupel[20]) return null;\n  return {\n    id: tupel[20],\n    firstName: tupel[21],\n    lastName: tupel[22],\n    scoutName: tupel[23],\n    address: tupel[24],\n    zipcode: tupel[25],\n    town: tupel[26],\n    country: tupel[27],\n    email: tupel[28],\n    salutation: tupel[29]\n  };\n}\n\nexport function transform(data: ImportTupel[]): Partial<AppState> {\n  const advisors: AdvisorMap = {}\n  const cantons: Set<string> = new Set<string>();\n  const courses: Course[] = data.reduce((result: Course[], tupel) => {\n    const advisorId = tupel[20]\n    if (!advisors[advisorId]) {\n      const newAdvisor = extractAdvisor(tupel);\n      newAdvisor && (advisors[advisorId] = newAdvisor)\n    }\n    const advisor = advisors[advisorId];\n    const course = extractCourse(tupel)\n\n    if (course) {\n      result.push({ advisor, ...course })\n      const canton = getAssociation(course.courseNumber)\n      canton && cantons.add(canton)\n    }\n\n    return result\n  }, [])\n\n  return { courses, advisors, cantons: Array.from(cantons) }\n}\n","import create from 'zustand'\nimport { persist } from \"zustand/middleware\"\nimport { Course } from './models/course'\nimport { AdvisorMap } from './models/advisor'\nimport { ImportTupel, transform } from './models/import_data'\n\nexport type AppState = {\n  courses: Course[];\n  cantons: string[];\n  advisors: AdvisorMap;\n  amountPerParticipant: number;\n  year: number;\n  importData: (value: ImportTupel[]) => void;\n  setYear: (value: number) => void;\n  setAmountPerParticipant: (value: number) => void;\n}\n\nexport const defaultState = { cantons: [], courses: [], advisors: {}, amountPerParticipant: 25.0, year: (new Date()).getFullYear() }\n\nexport const useStore = create<AppState>(persist(\n  (set) => ({\n    ...defaultState,\n    importData: (value: ImportTupel[]) => set((state) => ({ ...state, ...transform(value) })),\n    setYear: (value: number) => set((state) => ({ ...state, year: value })),\n    setAmountPerParticipant: (value: number) => set((state) => ({ ...state, amountPerParticipant: value }))\n  }),\n  {\n    name: \"bsv-pdf-storage\",\n    getStorage: () => sessionStorage,\n  }\n))\n","import React from 'react';\nimport { DSVImport } from '../components/DSVImport';\nimport { CourseTable } from '../components/CourseTable';\nimport { AdvisorTable } from '../components/AdvisorTable';\nimport { Container } from '../components/Layout';\nimport { CantonTable } from '../components/CantonTable';\nimport { useStore } from '../store';\n\nexport function MainView() {\n  const { courses, advisors, amountPerParticipant, year, cantons, importData, setAmountPerParticipant, setYear } = useStore();\n\n  return (\n    <Container>\n      <div>\n        <h1>BSV PDF</h1>\n        <div className=\"space-between\">\n          <label>\n            <div>Datei</div>\n            <DSVImport onChange={(value) => importData(value)}></DSVImport>\n          </label>\n\n          <label>\n            <div>Betrag pro Tn</div>\n            <input type=\"number\" step=\"0.1\" value={amountPerParticipant} onChange={(event) => setAmountPerParticipant(parseFloat(event.target.value))} />\n          </label>\n          <label>\n            <div>Jahr</div>\n            <input type=\"number\" step=\"1\" value={year} onChange={(event) => setYear(parseInt(event.target.value))} />\n          </label>\n        </div>\n        <h2>Kurse</h2>\n        <CourseTable courses={courses}></CourseTable>\n        <h2>Kantone</h2>\n        <CantonTable cantons={cantons}></CantonTable>\n        <h2>LKB</h2>\n        <AdvisorTable advisors={Object.values(advisors)}></AdvisorTable>\n      </div>\n    </Container >\n  );\n}\n\nexport default MainView;\n","export default __webpack_public_path__ + \"static/media/signature.8de7e4e8.png\";","import * as React from 'react'\nimport signature from '../images/signature.png'\nimport styles from './styles.module.css'\nimport { useTranslation } from 'react-i18next'\n\nexport function Footer({ lng }: { lng: string }) {\n  const t = useTranslation().i18n.getFixedT(lng)\n\n  return (\n    <>\n      <p>{t('Footer.Greeting')}</p>\n      <img className={styles.signature} src={signature} alt=\"Signature\" />\n      <p>{t('Footer.Address')}</p>\n    </>);\n}\n","import React from \"react\";\nimport styles from \"./AdvisorStatementPdf.module.css\";\nimport { AdvisorStatement } from \"../../models/advisor\";\nimport { Footer } from \"../Footer\";\nimport { formatCourseNumber } from \"../../models/course_number\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface AdvisorStatementPdfProps extends AdvisorStatement {\n  lng: string;\n}\n\nexport function AdvisorStatementPdf({ advisor, courses, year, amountPerParticipant, lng }: AdvisorStatementPdfProps) {\n  const t = useTranslation().i18n.getFixedT(lng)\n\n  return (\n    <div className={styles.document}>\n      <p>\n        {`${advisor.firstName} ${advisor.lastName}`}\n        <br />\n        {`${advisor.address}`}\n        <br />\n        {`${advisor.zipcode} ${advisor.town} ${advisor.country}`}\n        <br />\n      </p>\n      <h1 className={styles.title}>{t('AdvisorStatementPdf.title', { year })}</h1>\n      <p>{advisor.salutation}</p>\n      <p>{t('AdvisorStatementPdf.text')}\n      </p>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>{t(\"AdvisorStatementPdf.Kursschluessel\")}</th>\n            <th>{t(\"AdvisorStatementPdf.KursartJS\")}</th>\n            <th>{t(\"AdvisorStatementPdf.KursartPBS\")}</th>\n            <th className={styles.right}>{t(\"AdvisorStatementPdf.Entschaedingung\")}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map((course) => {\n            return (\n              <tr>\n                <td>{formatCourseNumber(course.courseNumber)}</td>\n                <td>{course.kind}</td>\n                <td>{course.kind}</td>\n                <td className={styles.right}>\n                  {amountPerParticipant.toFixed(2)}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>{t(\"AdvisorStatementPdf.Total\")}</td>\n            <td className={styles.right}>\n              {(courses.length * amountPerParticipant).toFixed(2)}\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n      <p>{t(\"AdvisorStatementPdf.thank\")}\n      </p>\n      <Footer lng={lng}></Footer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport { AdvisorStatementPdf } from \"../components/Advisor/AdvisorStatementPdf\";\nimport { useStore } from \"../store\";\n\nexport type AdvisorStatementPdfViewParams = {\n  id: string;\n}\n\nexport function AdvisorStatementPdfView() {\n  const { id } = useParams<AdvisorStatementPdfViewParams>()\n  const { courses, advisors, amountPerParticipant, year } = useStore()\n  const advisor = advisors[id]\n\n  return (\n    <>\n      <div className=\"no-print\">\n        <Link to=\"/\">Back</Link>\n        <button onClick={() => window.print()}>Print</button>\n      </div>\n\n      {advisor && <AdvisorStatementPdf lng='de' advisor={advisor} courses={courses.filter(course => course.advisor?.id === advisor.id)} year={year} amountPerParticipant={amountPerParticipant}></AdvisorStatementPdf>}\n    </>\n  )\n}\n","import { Course } from \"./course\";\n\nexport type CantonStatement = {\n  courses: Course[];\n  year: number;\n  amountPerParticipant: number;\n  canton: string;\n}\n\n\nexport function totalAttendanceCount(cantonStatement: CantonStatement): number {\n  return cantonStatement.courses.reduce((sum, course) => sum + course.bsvEligibleAttendances, 0.0);\n}\n\nexport function totalAmount(cantontStatement: CantonStatement): number {\n  return totalAttendanceCount(cantontStatement) * cantontStatement.amountPerParticipant;\n}\n","import React from 'react'\nimport styles from \"./CantonStatementPdf.module.css\";\nimport { CantonStatement, totalAttendanceCount, totalAmount } from \"../../models/canton_statement\";\nimport { Footer } from \"../Footer\";\nimport { totalAttendance } from \"../../models/attendance\"\nimport { formatCourseNumber } from \"../../models/course_number\";\nimport { useTranslation } from 'react-i18next'\n\ninterface CantonStatementPdfProps {\n  statement: CantonStatement;\n  lng: string;\n}\n\nexport function CantonStatementPdf({\n  statement, lng\n}: CantonStatementPdfProps) {\n  const { courses, year, canton, amountPerParticipant } = statement;\n  const t = useTranslation().i18n.getFixedT(lng)\n\n  return (\n    <div className={styles.document}>\n      <p>{t('CantonStatementPdf.locationDateHeader', { date: new Date().toLocaleDateString(\"de-CH\") })}</p>\n      <h1 className={styles.title}>{t('CantonStatementPdf.title', { year, canton })}</h1>\n      <p>{t('CantonStatementPdf.text', { amountPerParticipant })}</p>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>\n              {t('CantonStatementPdf.Kursnummer')}\n              <br />\n              {t('CantonStatementPdf.Kursbezeichnung')}\n            </th>\n            <th>\n              {t('CantonStatementPdf.ersterKurstag')}\n              <br />\n              {t('CantonStatementPdf.letzterKurstag')}\n            </th>\n            <th className={styles.center}>{t('CantonStatementPdf.AnzTn')}</th>\n            <th className={styles.center}>{t('CantonStatementPdf.Tage')}</th>\n            <th className={styles.center}>{t('CantonStatementPdf.TageXTn')}</th>\n            <th className={styles.center}>\n              {t('CantonStatementPdf.TotalTage')}\n              <br />\n              {t('CantonStatementPdf.Tn')}\n            </th>\n            <th className={styles.right}>\n              {t('CantonStatementPdf.BsvBeitrag')}\n              <br />\n              {t('CantonStatementPdf.fuerTn')}\n            </th>\n            <th className={styles.right}>\n              {t('CantonStatementPdf.TotalBsv')}\n              <br />\n              {t('CantonStatementPdf.Beitrag')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map((course) => {\n            const attendances = Array.from(course.bsvEligibleAttendance);\n            const attendance1 = attendances.shift();\n            const attendance2 = attendances.shift();\n            return (\n              <>\n                <tr>\n                  <td>\n                    <strong>{formatCourseNumber(course.courseNumber)}</strong>\n                  </td>\n                  <td>{course.firstCourseDate}</td>\n                  <td className={styles.center}>{attendance1?.count}</td>\n                  <td className={styles.center}>{attendance1?.days}</td>\n                  <td className={styles.center}>{attendance1 ? totalAttendance(attendance1) : ''}</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                </tr>\n                <tr>\n                  <td>{course.kind}</td>\n                  <td>{course.lastCourseDate}</td>\n                  <td className={styles.center}>{attendance2?.count}</td>\n                  <td className={styles.center}>{attendance2?.days}</td>\n                  <td className={styles.center}>{attendance2 ? totalAttendance(attendance2) : ''}</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                </tr>\n                {attendances.map((attendance) => (\n                  <tr>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td className={styles.center}>{attendance.count}</td>\n                    <td className={styles.center}>{attendance.days}</td>\n                    <td className={styles.center}>{attendance ? totalAttendance(attendance) : ''}</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                  </tr>\n                ))}\n                <tr>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                </tr>\n                <tr className={styles.separator}>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td className={styles.center}>\n                    {course.bsvEligibleAttendances}\n                  </td>\n                  <td className={styles.right}>\n                    {(\n                      course.bsvEligibleAttendances * amountPerParticipant\n                    ).toFixed(2)}\n                  </td>\n                  <td className={styles.right}>\n                    {(\n                      course.bsvEligibleAttendances * amountPerParticipant\n                    ).toFixed(2)}\n                  </td>\n                </tr>\n              </>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td className={styles.center}>{t(\"CantonStatementPdf.Total\")}</td>\n            <td className={styles.center}>{totalAttendanceCount(statement)}</td>\n            <td className={styles.right}>\n              {totalAmount(statement).toFixed(2)}\n            </td>\n            <td className={styles.right}>\n              {totalAmount(statement).toFixed(2)}\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n      <Footer lng={lng}></Footer>\n    </div >\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport { CantonStatementPdf } from \"../components/Canton/CantonStatementPdf\";\nimport { CantonStatement } from \"../models/canton_statement\";\nimport { useStore } from \"../store\";\nimport { getAssociation } from \"../models/course_number\";\nimport { useTranslation } from 'react-i18next';\nimport { cantonLng } from \"../models/canton\";\n\nexport type CantonStatementPdfViewParams = {\n  id: string;\n}\n\nexport function CantonStatementPdfView() {\n  const { id } = useParams<CantonStatementPdfViewParams>()\n  const { courses, amountPerParticipant, year } = useStore()\n  const { t } = useTranslation()\n  const lng = cantonLng(id)\n  const cantonStatement: CantonStatement = {\n    courses: courses.filter(course => getAssociation(course.courseNumber).toUpperCase() === id.toUpperCase()),\n    year: year,\n    amountPerParticipant: amountPerParticipant,\n    canton: id\n  }\n\n  return (\n    <>\n      <div className=\"no-print\">\n        <Link to=\"/\">{t('back')}</Link>\n        <button onClick={() => window.print()}>Print</button>\n      </div>\n\n      {cantonStatement && <CantonStatementPdf lng={lng} statement={cantonStatement}></CantonStatementPdf>}\n    </>\n  )\n}\n","export function cantonLng(canton: string): ('de' | 'fr') {\n  return ['GE', 'NE', 'FR', 'VS', 'VD', 'JU'].includes(canton.toUpperCase()) ? 'fr' : 'de'\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport MainView from './views/MainView';\nimport { AdvisorStatementPdfView } from './views/AdivsorStatementPdfView';\nimport { CantonStatementPdfView } from './views/CantonStatementPdfView ';\nimport './App.css'\n\nexport function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/advisors/:id\" children={<AdvisorStatementPdfView></AdvisorStatementPdfView>}></Route>\n        <Route path=\"/cantons/:id\" children={<CantonStatementPdfView></CantonStatementPdfView>}></Route>\n        <Route children={<MainView></MainView>}></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst resources = {\n  de: {\n    translation: {\n      \"back\": \"Zurück\",\n      \"AdvisorStatementPdf\": {\n        \"title\": \"LKB Entschädigung {{year}}\",\n        \"text\": `Im vergangenen Jahr hast Du die unten aufgeführten Kurse betreut. Dafür erhälst Du heute die LKB Entschädigung.`,\n        \"Kursschluessel\": \"Kursschlüssel\",\n        \"KursartJS\": \"Kursart J+S LS/T\",\n        \"KursartPBS\": \"PBS Kursart\",\n        \"Entschaedigung\": \"Entschädigung\",\n        \"Total\": \"Total\",\n        \"thank\": `Nochmals besten Dank für Deinen Einsatz als Leiterkursbetreuer sowie für die Begeisterung und die Zeit, die Du dafür einsetzt. Ich hoffe sehr, dass wir auch in Zukunft auf Deine Hilfe zählen können.`,\n      },\n      \"CantonStatementPdf\": {\n        \"locationDateHeader\": \"Bern, {{date}}\",\n        \"title\": \"Auszahlung der Kurs-Subventionen des KV {{canton}} {{year}}\",\n        \"text\": `In diesen Tagen können wir Euch die Kurs-Subventionen des BSV für die bis heute abgerechneten Kurse überweisen. Wir bitten Euch, Euren Kassierer darüber zu informieren.\n\n                 Der Tagesansatz ist aktuell CHF {{ amountPerParticipant }} / TN\n\n                 Ohne Euren Gegenbericht innert 20 Tagen gehen wir davon aus, dass Ihr mit den unten aufgeführten Angaben einverstanden seid.`,\n        \"Kursnummer\": \"Kursnummer\",\n        \"Kursbezeichnung\": \"Kursbezeichnung\",\n        \"ersterKurstag\": \"erster Kurstag\",\n        \"letzterKurstag\": \"letzter Kurstag\",\n        \"AnzTn\": \"Anz Tn\",\n        \"Tage\": \"Tage\",\n        \"TageXTn\": \"Tage x Tn\",\n        \"TotalTage\": \"Total Tage\",\n        \"Tn\": \"Tn\",\n        \"BsvBeitrag\": \"BSV Beitrag\",\n        \"fuerTn\": \"für Tn\",\n        \"TotalBsv\": \"Total BSV\",\n        \"Beitrag\": \"Beitrag\",\n        \"Total\": \"Total\"\n\n      },\n      \"Footer\": {\n        \"Greeting\": `Für die Beantwortung von Fragen stehen wir Euch gerne zur Verfügung\n\n                     Mit herzlichen Pfadigrüssen`,\n        \"Address\": `Emanuel Wyss / Tschagon\n                    Ausbildungssekretariat PBS\n                    Direktwahl: 031 328 05 42\n                    E-Mail: emanuel.wyss@pbs.ch`\n      }\n\n    }\n  },\n  fr: {\n    translation: {\n      \"back\": \"Retour\",\n      \"AdvisorStatementPdf\": {\n        \"title\": \"LKB Entschädigung {{year}}\",\n        \"text\": `Im vergangenen Jahr hast Du die unten aufgeführten Kurse betreut. Dafür erhälst Du heute die LKB Entschädigung.`,\n        \"Kursschluessel\": \"Kursschlüssel\",\n        \"KursartJS\": \"Kursart J+S LS/T\",\n        \"KursartPBS\": \"PBS Kursart\",\n        \"Entschaedigung\": \"Entschädigung\",\n        \"Total\": \"Total\",\n        \"thank\": `Nochmals besten Dank für Deinen Einsatz als Leiterkursbetreuer sowie für die Begeisterung und die Zeit, die Du dafür einsetzt. Ich hoffe sehr, dass wir auch in Zukunft auf Deine Hilfe zählen können.`,\n      },\n      \"CantonStatementPdf\": {\n        \"locationDateHeader\": \"Berne, {{date}}\",\n        \"title\": \"Versement des subventions de cours à l'AC {{canton}} {{year}}\",\n        \"text\": `Chère responsable cantonale, cher responsable cantonal \n        \n                 Nous allons vous verser prochainement les subventions OFAS pour les cours dont vous avez présenté le décompte à ce jour. Nous vous prions d'en informer votre caissier.\n\n                 Sans contreordre de votre part dans un délai de 20 jours, nous considérons que vous êtes d'accord avec les données ci-dessous.\n\n                 Le tarif par jour et actuellement de {{ amountPerParticipant }} CHF / Part.`,\n\n        \"Kursnummer\": \"No du cours\",\n        \"Kursbezeichnung\": \"Type de cours\",\n        \"ersterKurstag\": \"premier jour\",\n        \"letzterKurstag\": \"dernier jour\",\n        \"AnzTn\": \"Part.\",\n        \"Tage\": \"jours\",\n        \"TageXTn\": \"Part. x jours\",\n        \"TotalTage\": \"Total jours\",\n        \"Tn\": \"Part.\",\n        \"BsvBeitrag\": \"subvent. OFC\",\n        \"fuerTn\": \"pour Part.\",\n        \"TotalBsv\": \"Total OFC\",\n        \"Beitrag\": \"subvent.\",\n        \"Total\": \"Total\"\n\n      },\n      \"Footer\": {\n        \"Greeting\": `N'hésitez pas à nous contacter pour tout renseignement supplémentaire.\n\n                     Avec nos meilleures salutations`,\n        \"Address\": `Emanuel Wyss / Tschagon\n                    Secrétariat MSdS à la Formation\n                    Tel. direct: 031 328 05 42 \n                    E-Mail: emanuel.wyss@pbs.ch`\n      }\n    }\n  }\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"de\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './i18n'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}