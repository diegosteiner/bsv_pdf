{"version":3,"sources":["components/Advisor/AdvisorStatementPdf.module.css","components/Canton/CantonStatementPdf.module.css","components/Layout.module.css","models/advisor.ts","models/attendance.ts","models/course.ts","models/import_data.ts","components/DSVImport.tsx","components/CourseTable.tsx","components/AdvisorTable.tsx","components/Layout.tsx","components/CantonTable.tsx","views/MainView.tsx","images/signature.png","components/Advisor/AdvisorStatementPdf.tsx","views/AdivsorStatementPdfView.tsx","components/Canton/CantonStatementPdf.tsx","components/Canton/canton_statement.ts","views/CantonStatementPdfView .tsx","App.tsx","index.tsx"],"names":["module","exports","Advisor","id","firstName","lastName","scoutName","address","zipcode","town","country","email","salutation","this","Attendance","days","count","participationsString","split","map","participationString","values","NoCourseNumberError","Error","CourseNumber","courseNumberString","cantonalAssociation","regionalAssociation","year","kind","countNumber","match","RegExp","exec","toUpperCase","transform","data","advisors","cantons","Set","courses","reduce","result","tupel","advisorId","newAdvisor","extractAdvisor","advisor","course","agreementIdFiver","courseIdFiver","courseNumber","firstCourseDate","lastCourseDate","location","trainingDays","parseInt","bsvDays","bsvEligibleParticipationsCount","bsvEligibleAttendances","bsvEligibleAttendance","fromAttendanceSummary","leaderCount","allParticipantsCount","allParticipantsAttendanceSummary","allParticipantsAttendances","allParticipantsAttendance","cantonsCount","languagesCount","e","extractCourse","canton","association","push","add","DSVImport","onChange","reader","FileReader","onload","event","parse","target","complete","type","file","files","readAsText","CourseTable","toString","AdvisorTable","to","Math","random","Container","children","className","styles","container","CantonTable","Array","from","MainView","onDataImport","onAmountChange","onYearChange","useContext","AppContext","amountPerParticipant","value","step","parseFloat","Object","AdvisorStatementPdf","document","title","table","right","toFixed","length","signature","src","alt","AdvisorStatementPdfView","useParams","onClick","window","print","filter","CantonStatementPdf","statement","Date","toLocaleDateString","center","attendances","attendance1","shift","attendance2","total","attendance","separator","totalAttendanceCount","totalAmount","CantonStatement","sum","CantonStatementPdfView","cantonStatement","defaultAppState","getFullYear","createContext","App","useState","state","setState","Provider","basename","process","path","prev","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f7b024a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"AdvisorStatementPdf_document__3aSbO\",\"title\":\"AdvisorStatementPdf_title__1VpJQ\",\"signature\":\"AdvisorStatementPdf_signature__g1MHp\",\"table\":\"AdvisorStatementPdf_table__3Mk2g\",\"right\":\"AdvisorStatementPdf_right__sgSDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"CantonStatementPdf_document__EBEqE\",\"title\":\"CantonStatementPdf_title__1qpxm\",\"signature\":\"CantonStatementPdf_signature__1KFn9\",\"table\":\"CantonStatementPdf_table__39rps\",\"right\":\"CantonStatementPdf_right__1leZF\",\"center\":\"CantonStatementPdf_center__E5PyN\",\"separator\":\"CantonStatementPdf_separator__ZcRe9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3pAzR\"};","export class Advisor {\n  id: string;\n  firstName: string;\n  lastName: string;\n  scoutName: string;\n  address: string;\n  zipcode: string;\n  town: string;\n  country: string;\n  email: string;\n  salutation: string;\n\n  constructor(id: string, firstName: string, lastName: string, scoutName: string, address: string, zipcode: string, town: string, country: string, email: string, salutation: string) {\n    this.id = id\n    this.firstName = firstName\n    this.lastName = lastName\n    this.scoutName = scoutName\n    this.address = address\n    this.zipcode = zipcode\n    this.town = town\n    this.country = country\n    this.email = email\n    this.salutation = salutation\n  }\n\n  toString() {\n    return `${this.firstName} ${this.lastName} / ${this.scoutName}`\n  }\n}\n\n\nexport type AdvisorMap = { [key: string]: Advisor }\n","\nexport class Attendance {\n  days: number\n  count: number\n\n  constructor(days: number = 0, count: number = 0) {\n    this.count = count\n    this.days = days\n  }\n\n  total() {\n    return this.days * this.count\n  }\n\n  static fromAttendanceSummary(participationsString: string): Attendance[] {\n    return participationsString.split(',').map(participationString => {\n      const values = participationString.split('x')\n      return new Attendance(+values[0], +values[1])\n    })\n  }\n}\n\n","import { Advisor } from './advisor'\nimport { Attendance } from './attendance';\n\nexport class NoCourseNumberError extends Error {\n}\n\nexport class CourseNumber {\n  cantonalAssociation?: string;\n  regionalAssociation: string;\n  year: number\n  kind: number\n  countNumber: number\n\n  constructor(courseNumberString: string) {\n    const regex = new RegExp(/PBS\\s?(CH)?\\s([a-zA-Z]{2})?\\s?(?<kind>\\d)(?<regionalAssociation>\\d)(?<countNumber>\\d)-(?<year>\\d{2})/, 'i')\n    const match = regex.exec(courseNumberString)\n    if (!match) throw new NoCourseNumberError('Not a course number')\n\n    this.cantonalAssociation = match[2]?.toUpperCase()\n    this.kind = +match[3]\n    this.regionalAssociation = match[4]\n    this.countNumber = +match[5]\n    this.year = +match[6]\n  }\n\n  association(): string {\n    if (!this.cantonalAssociation || this.cantonalAssociation === '') return 'CH';\n    if (this.cantonalAssociation === 'ZH') return `ZH-${this.regionalAssociation}`;\n    return this.cantonalAssociation || '';\n  }\n\n  toString(): string {\n    const cantonalAssociation = this.cantonalAssociation ? `${this.cantonalAssociation} ` : ''\n    return `PBS CH ${cantonalAssociation}${this.kind}${this.regionalAssociation}${this.countNumber}-${this.year}`\n  }\n}\n\nexport type Course = {\n  agreementIdFiver: string;\n  courseIdFiver: string;\n  kind: string;\n  courseNumber: CourseNumber;\n  firstCourseDate: string;\n  lastCourseDate: string;\n  location: string;\n  trainingDays: number;\n  bsvDays: number;\n  bsvEligibleParticipationsCount: number;\n  bsvEligibleAttendances: number;\n  bsvEligibleAttendance: Attendance[];\n  leaderCount: string;\n  allParticipantsCount: number;\n  allParticipantsAttendanceSummary: string;\n  allParticipantsAttendances: number;\n  allParticipantsAttendance: Attendance[];\n  cantonsCount: number;\n  languagesCount: number;\n  advisor?: Advisor;\n}\n","import { Advisor, AdvisorMap } from \"./advisor\";\nimport { Attendance } from \"./attendance\";\nimport { Course, CourseNumber, NoCourseNumberError } from \"./course\";\n\nexport function getAdvisorId(tupel: ImportTupel): string {\n  return tupel[20]\n}\n\nexport type ImportTupel = [\n  string, string, string, string, string, string, string, string, string, string,\n  string, string, string, string, string, string, string, string, string, string,\n  string, string, string, string, string, string, string, string, string, string\n]\n\nexport type ImportResult = {\n  courses: Course[];\n  advisors: AdvisorMap;\n  cantons: Set<string>;\n}\n\nexport function extractCourse(tupel: ImportTupel): Course | null {\n  try {\n    return {\n      agreementIdFiver: tupel[0],\n      courseIdFiver: tupel[1],\n      kind: tupel[2],\n      courseNumber: new CourseNumber(tupel[5]),\n      firstCourseDate: tupel[6],\n      lastCourseDate: tupel[7],\n      location: tupel[8],\n      trainingDays: parseInt(tupel[9]),\n      bsvDays: parseInt(tupel[10]),\n      bsvEligibleParticipationsCount: parseInt(tupel[11]),\n      bsvEligibleAttendances: parseInt(tupel[13]),\n      bsvEligibleAttendance: Attendance.fromAttendanceSummary(tupel[12]),\n      leaderCount: tupel[14],\n      allParticipantsCount: parseInt(tupel[15]),\n      allParticipantsAttendanceSummary: tupel[16],\n      allParticipantsAttendances: parseInt(tupel[17]),\n      allParticipantsAttendance: Attendance.fromAttendanceSummary(tupel[16]),\n      cantonsCount: parseInt(tupel[18]),\n      languagesCount: parseInt(tupel[19])\n    }\n  } catch (e) {\n    if (e instanceof NoCourseNumberError) {\n      return null;\n    }\n    else {\n      throw e;\n    }\n  }\n}\n\nexport function extractAdvisor(tupel: ImportTupel): Advisor | null {\n  if (!tupel[20]) return null;\n  return new Advisor(\n    tupel[20],\n    tupel[21],\n    tupel[22],\n    tupel[23],\n    tupel[24],\n    tupel[25],\n    tupel[26],\n    tupel[27],\n    tupel[28],\n    tupel[29]);\n}\n\nexport const transform = (data: ImportTupel[]): ImportResult => {\n  const advisors: AdvisorMap = {}\n  const cantons: Set<string> = new Set<string>();\n  const courses: Course[] = data.reduce((result: Course[], tupel) => {\n    const advisorId = tupel[20]\n    if (!advisors[advisorId]) {\n      const newAdvisor = extractAdvisor(tupel);\n      newAdvisor && (advisors[advisorId] = newAdvisor)\n    }\n    const advisor = advisors[advisorId];\n    const course = extractCourse(tupel)\n    const canton = course && course.courseNumber.association()\n    course && result.push({ advisor, ...course })\n    canton && cantons.add(canton)\n    return result\n  }, [])\n\n  return { courses, advisors, cantons }\n}\n","import React, { FunctionComponent } from 'react';\nimport { transform, ImportResult, ImportTupel } from '../models/import_data'\nimport { parse } from 'papaparse';\n\nexport interface DSVImportProps {\n  onChange?: (value: ImportResult) => void;\n}\n\nexport const DSVImport: FunctionComponent<DSVImportProps> = ({ onChange }) => {\n\n  const reader = new FileReader()\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target?.files && event.target.files[0]\n    file && reader.readAsText(file, 'iso88591');\n  };\n  reader.onload = (event) => {\n    parse(event.target?.result as string, {\n      complete: ({ data }: { data: ImportTupel[] }) => {\n        onChange && onChange(transform(data));\n      }\n    });\n  }\n\n  return <input type=\"file\" onChange={handleChange} />;\n};\n\n","import React, { ReactElement } from 'react'\nimport { Course } from '../models/course'\n\ntype CourseTableProps = {\n  courses: Course[];\n}\n\nexport const CourseTable = ({ courses }: CourseTableProps): ReactElement => {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {courses.map(course => (\n          <tr key={course.courseNumber.toString()}>\n            <td>{course.courseNumber.toString()}</td>\n            <td>{course.courseNumber.cantonalAssociation}</td>\n            <td>{course.kind}</td>\n            <td>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import React, { ReactElement } from 'react'\nimport { Advisor } from '../models/advisor'\nimport { Link } from 'react-router-dom'\n\ntype Props = {\n  advisors: Advisor[];\n}\n\nexport function AdvisorTable({ advisors }: Props): ReactElement {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {advisors.map(advisor => (\n          <tr key={advisor.id || Math.random() * 10000000}>\n            <td>{advisor.toString()}</td>\n            <td><Link to={`/advisors/${advisor.id}`}>PDF</Link></td>\n          </tr>\n        ))}\n      </tbody>\n    </table >\n  )\n}\n","import styles from './Layout.module.css'\nimport React, { FunctionComponent } from 'react'\n\nexport const Container: FunctionComponent<{}> = ({ children }) => {\n  return (<div className={styles.container}>{children}</div>)\n}\n","import React, { FunctionComponent } from 'react'\nimport { Link } from 'react-router-dom'\n\ntype CourseTableProps = {\n  cantons: Set<string>;\n}\n\nexport const CantonTable: FunctionComponent<CourseTableProps> = ({ cantons }) => {\n  return (\n    <table>\n      <thead></thead>\n      <tbody>\n        {Array.from(cantons).map(canton => (\n          <tr key={canton}>\n            <td>{canton}</td>\n            <td><Link to={`/cantons/${canton}`}>PDF</Link></td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import React, { FunctionComponent, useContext } from 'react';\nimport { DSVImport } from '../components/DSVImport';\nimport { CourseTable } from '../components/CourseTable';\nimport { AdvisorTable } from '../components/AdvisorTable';\nimport { AppContext } from '../App';\nimport { Container } from '../components/Layout';\nimport { CantonTable } from '../components/CantonTable';\nimport { ImportResult } from '../models/import_data';\n\nexport interface MainViewProps {\n  onDataImport?(value: ImportResult): void\n  onAmountChange?(value: number): void\n  onYearChange?(value: number): void\n}\n\nexport const MainView: FunctionComponent<MainViewProps> = ({ onDataImport, onAmountChange, onYearChange }) => {\n  const { courses, advisors, amountPerParticipant, year, cantons } = useContext(AppContext);\n\n  return (\n    <Container>\n      <div>\n        <h1>BSV PDF</h1>\n        <div className=\"space-between\">\n          <label>\n            <div>Datei</div>\n            <DSVImport onChange={(value) => onDataImport && onDataImport(value)}></DSVImport>\n          </label>\n\n          <label>\n            <div>Betrag pro Tn</div>\n            <input type=\"number\" step=\"0.1\" value={amountPerParticipant} onChange={(event) => onAmountChange && onAmountChange(parseFloat(event.target.value))} />\n          </label>\n          <label>\n            <div>Jahr</div>\n            <input type=\"number\" step=\"1\" value={year} onChange={(event) => onYearChange && onYearChange(parseInt(event.target.value))} />\n          </label>\n        </div>\n        <h2>Kurse</h2>\n        <CourseTable courses={courses}></CourseTable>\n        <h2>Kantone</h2>\n        <CantonTable cantons={cantons}></CantonTable>\n        <h2>LKB</h2>\n        <AdvisorTable advisors={Object.values(advisors)}></AdvisorTable>\n      </div>\n    </Container >\n  );\n}\n\nexport default MainView;\n","export default __webpack_public_path__ + \"static/media/signature.8de7e4e8.png\";","import React, { FunctionComponent, ReactElement } from 'react';\nimport signature from '../../images/signature.png'\nimport styles from './AdvisorStatementPdf.module.css'\nimport { AdvisorStatement } from './advisor_statement'\n\nexport const AdvisorStatementPdf: FunctionComponent<AdvisorStatement> = ({ advisor, courses, year, amountPerParticipant }) => {\n  return (\n    <div className={styles.document}>\n      <p>\n        {`${advisor.firstName} ${advisor.lastName}`}<br />\n        {`${advisor.address}`}<br />\n        {`${advisor.zipcode} ${advisor.town} ${advisor.country}`}<br />\n      </p>\n      <h1 className={styles.title}>{`LKB Entschädigung ${year}`}</h1>\n      <p>{advisor.salutation}</p>\n      <p>{\"Im vergangenen Jahr hast Du die unten aufgeführten Kurse betreut. Dafür erhälst Du heute die LKB Entschädigung.\"}</p>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>{'Kursschlüssel'}</th>\n            <th>{'Kursart J+S LS/T'}</th>\n            <th>{'PBS Kursart'}</th>\n            <th className={styles.right}>{'Entschädigung'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map<ReactElement>(course => {\n            return (<tr>\n              <td>{course.courseNumber.toString()}</td>\n              <td>{course.kind}</td>\n              <td>{course.kind}</td>\n              <td className={styles.right}>{amountPerParticipant.toFixed(2)}</td>\n            </tr>)\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td>{'Total'}</td>\n            <td className={styles.right}>{(courses.length * amountPerParticipant).toFixed(2)}</td>\n          </tr>\n        </tfoot>\n      </table>\n      <p>{\"Nochmals besten Dank für Deinen Einsatz als Leiterkursbetreuer sowie für die Begeisterung und die Zeit, die Du dafür einsetzt. Ich hoffe sehr, dass wir auch in Zukunft auf Deine Hilfe zählen können.\"}</p>\n      <p>{\"Mit herzlichen Pfadigrüssen\"}</p>\n      <img className={styles.signature} src={signature} alt=\"Signature\" />\n      <p>\n        {`Sonja Dietrich`}<br />\n        {\"Ausbildungssekretariat PBS\"}<br />\n        {\"Direktwahl: 031 328 05 42\"}<br />\n        {\"E-Mail: sonja.dietrich@pbs.ch\"}\n      </p>\n    </div >\n  )\n}\n\n\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport { AppState, AppContext } from \"../App\";\nimport { AdvisorStatementPdf } from \"../components/Advisor/AdvisorStatementPdf\";\n\nexport type AdvisorStatementPdfViewParams = {\n  id: string;\n}\n\nexport const AdvisorStatementPdfView: FunctionComponent<{}> = () => {\n  const { id } = useParams<AdvisorStatementPdfViewParams>()\n  const { courses, advisors, amountPerParticipant, year } = useContext<AppState>(AppContext)\n  const advisor = advisors[id]\n\n  return (\n    <>\n      <div className=\"no-print\">\n        <Link to=\"/\">Back</Link>\n        <button onClick={() => window.print()}>Print</button>\n      </div>\n\n      {advisor && <AdvisorStatementPdf advisor={advisor} courses={courses.filter(course => course.advisor?.id === advisor.id)} year={year} amountPerParticipant={amountPerParticipant}></AdvisorStatementPdf>}\n    </>\n  )\n}\n","import React, { FunctionComponent, ReactElement } from 'react';\nimport signature from '../../images/signature.png'\nimport styles from './CantonStatementPdf.module.css'\nimport { CantonStatement } from './canton_statement'\n\ninterface CantonStatementPdfProps {\n  statement: CantonStatement;\n}\n\nexport const CantonStatementPdf: FunctionComponent<CantonStatementPdfProps> = ({ statement }) => {\n  // SEPARATOR = \"\\u2063\".freeze\n\n  const { courses, year, canton, amountPerParticipant } = statement\n\n  return (\n    <div className={styles.document}>\n      <p>{`Bern, ${(new Date()).toLocaleDateString('de-CH')}`}</p>\n      <h1 className={styles.title}>{`Auszahlung der Kurs-Subventionen des KV ${canton} ${year}`}</h1>\n      <p>{\"In diesen Tagen können wir Euch die Kurs-Subventionen des BSV für die bis heute abgerechneten Kurse überweisen. Wir bitten Euch, Euren Kassierer darüber zu informieren.\"}</p>\n      <p>{`Der Tagesansatz ist aktuell CHF ${amountPerParticipant} / TN`}</p>\n      <p>{\"Ohne Euren Gegenbericht innert 20 Tagen gehen wir davon aus, dass Ihr mit den unten aufgeführten Angaben einverstanden seid.\"}</p>\n\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <th>{'Kursnummer'}<br />{'Kursnummer'}</th>\n            <th>{'erster Kurstag'}<br />{'letzter Kurstag'}</th>\n            <th className={styles.center}>{'# Tn'}</th>\n            <th className={styles.center}>{'Tage'}</th>\n            <th className={styles.center}>{'Tage\\nx Tn'}</th>\n            <th className={styles.center}>{'Total Tage'}<br />{'Tn'}</th>\n            <th className={styles.right}>{'BSV Beitrag'}<br />{'für Tn'}</th>\n            <th className={styles.right}>{'Total BSV'}<br />{'Beitrag'}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map<ReactElement>(course => {\n            const attendances = Array.from(course.bsvEligibleAttendance)\n            const attendance1 = attendances.shift()\n            const attendance2 = attendances.shift()\n            return (\n              <>\n                <tr>\n                  <td><strong>{course.courseNumber.toString()}</strong></td>\n                  <td>{course.firstCourseDate}</td>\n                  <td className={styles.center}>{attendance1?.count}</td>\n                  <td className={styles.center}>{attendance1?.days}</td>\n                  <td className={styles.center}>{attendance1?.total()}</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                </tr>\n                <tr>\n                  <td>{course.kind}</td>\n                  <td>{course.lastCourseDate}</td>\n                  <td className={styles.center}>{attendance2?.count}</td>\n                  <td className={styles.center}>{attendance2?.days}</td>\n                  <td className={styles.center}>{attendance2?.total()}</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                </tr>\n                {attendances.map(attendance => (\n                  <tr>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td className={styles.center}>{attendance.count}</td>\n                    <td className={styles.center}>{attendance.days}</td>\n                    <td className={styles.center}>{attendance.total()}</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                  </tr>\n                ))}\n                <tr>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                </tr>\n                <tr className={styles.separator}>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td>&nbsp;</td>\n                  <td className={styles.center}>{course.bsvEligibleAttendances}</td>\n                  <td className={styles.right}>{(course.bsvEligibleAttendances * amountPerParticipant).toFixed(2)}</td>\n                  <td className={styles.right}>{(course.bsvEligibleAttendances * amountPerParticipant).toFixed(2)}</td>\n                </tr>\n              </>\n            )\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td className={styles.center}>{'Total'}</td>\n            <td className={styles.right}>{statement.totalAttendanceCount()}</td>\n            <td className={styles.right}>{statement.totalAmount().toFixed(2)}</td>\n            <td className={styles.right}>{statement.totalAmount().toFixed(2)}</td>\n          </tr>\n        </tfoot>\n      </table>\n      <p>{\"Für die Beantwortung von Fragen stehen wir Euch gerne zur Verfügung\"}</p>\n      <p>{\"Mit herzlichen Pfadigrüssen\"}</p>\n      <img className={styles.signature} src={signature} alt=\"Signature\" />\n      <p>\n        {`Sonja Dietrich`}<br />\n        {\"Ausbildungssekretariat PBS\"}<br />\n        {\"Direktwahl: 031 328 05 42\"}<br />\n        {\"E-Mail: sonja.dietrich@pbs.ch\"}\n      </p>\n    </div >\n  )\n}\n\n\n","import { Course } from \"../../models/course\";\n\n\nexport class CantonStatement {\n  courses: Course[];\n  year: number;\n  amountPerParticipant: number;\n  canton: string;\n\n  constructor(courses: Course[], year: number, amountPerParticipant: number, canton: string) {\n    this.courses = courses;\n    this.year = year;\n    this.amountPerParticipant = amountPerParticipant;\n    this.canton = canton\n  }\n\n  totalAttendanceCount(): number {\n    return this.courses.reduce((sum, course) => sum + course.bsvEligibleAttendances, 0.0);\n  }\n\n  totalAmount(): number {\n    return this.totalAttendanceCount() * this.amountPerParticipant;\n  }\n}\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\"\nimport { AppState, AppContext } from \"../App\";\nimport { CantonStatementPdf } from \"../components/Canton/CantonStatementPdf\";\nimport { CantonStatement } from \"../components/Canton/canton_statement\";\n\nexport type CantonStatementPdfViewParams = {\n  id: string;\n}\n\nexport const CantonStatementPdfView: FunctionComponent = () => {\n  const { id } = useParams<CantonStatementPdfViewParams>()\n  const { courses, amountPerParticipant, year } = useContext<AppState>(AppContext)\n  const cantonStatement = new CantonStatement(courses.filter(course => course.courseNumber?.association() === id.toUpperCase()), year, amountPerParticipant, id)\n\n  return (\n    <>\n      <div className=\"no-print\">\n        <Link to=\"/\">Back</Link>\n        <button onClick={() => window.print()}>Print</button>\n      </div>\n\n      {cantonStatement && <CantonStatementPdf statement={cantonStatement}></CantonStatementPdf>}\n    </>\n  )\n}\n","import React, { useState, createContext, FunctionComponent } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport MainView from './views/MainView';\nimport { AdvisorMap } from \"./models/advisor\"\nimport { Course } from \"./models/course\"\nimport { ImportResult } from './models/import_data';\nimport { AdvisorStatementPdfView } from './views/AdivsorStatementPdfView';\nimport './App.css'\nimport { CantonStatementPdfView } from './views/CantonStatementPdfView ';\n\nexport type AppState = {\n  courses: Course[];\n  cantons: Set<string>;\n  advisors: AdvisorMap;\n  amountPerParticipant: number;\n  year: number;\n}\n\nexport const defaultAppState = { cantons: (new Set<string>()), courses: [], advisors: {}, amountPerParticipant: 25.0, year: (new Date()).getFullYear() }\n\nexport const AppContext = createContext<AppState>(defaultAppState)\n\nexport const App: FunctionComponent = () => {\n  const [state, setState] = useState<AppState>(defaultAppState);\n  const handleDataImport = (value: ImportResult) => setState((prev) => ({ ...prev, ...value }));\n  const handleYearChange = (value: number) => setState((prev) => ({ ...prev, year: value }));\n  const handleAmountChange = (value: number) => setState((prev) => ({ ...prev, amountPerParticipant: value }));\n\n  return (\n    <AppContext.Provider value={state}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/advisors/:id\" children={<AdvisorStatementPdfView></AdvisorStatementPdfView>}></Route>\n          <Route path=\"/cantons/:id\" children={<CantonStatementPdfView></CantonStatementPdfView>}></Route>\n          <Route children={<MainView onYearChange={handleYearChange} onAmountChange={handleAmountChange} onDataImport={handleDataImport}></MainView>}></Route>\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}